services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_NAME: django-postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - postgres-db
      - celery-worker

  postgres-db:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_DB: django-postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5454:5432"

  redis:
    image: redis:alpine
    hostname: redis

  celery-worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker #--loglevel=info
    volumes:
      - ./backend:/backend
    links:
      - redis
    depends_on:
      - redis
      - postgres-db
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_NAME: django-postgres
      DB_USER: postgres
      DB_PASSWORD: postgres

  celery-worker-2:
    build:
      context: .
    hostname: worker-2
    entrypoint: celery
    command: -A celery_app.app worker #--loglevel=info
    volumes:
      - ./backend:/backend
    links:
      - redis
    depends_on:
      - redis
      - postgres-db
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_NAME: django-postgres
      DB_USER: postgres
      DB_PASSWORD: postgres

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./backend:/backend
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"

